syntax = "v1"

service apis {
	@handler UserRegister
	post /douyin/user/register (UserRegisteRequest) returns (UserRegisterResponse)
	@handler UserLogin
	post /douyin/user/login (UserLoginRequest) returns (UserLoginResponse)
}

@server(
	middleware : Auth
)
service apis {
	@handler UserInfo
	get /douyin/user (UserInfoRequest) returns (UserInfoResponse)
	
	@handler VideoAction
	post /douyin/publish/action (VideoActionRequest) returns (VideoActionResponse)
	@handler VideoList
	get /douyin/publish/list (VideoListRequest) returns (VideoListResponse)
	
	@handler FavoriteAction
	post /douyin/favorite/action (FavoriteActionRequest) returns (FavoriteActionResponse)
	@handler FavoriteList
	get /douyin/favorite/list (FavoriteListRequest) returns (FavoriteListResponse)
	
	@handler CommentAction
	post /douyin/comment/action (CommentActionRequest) returns (CommentActionResponse)
	@handler CommentList
	get /douyin/comment/list (CommentListRequest) returns (CommentListResponse)
	
	@handler MessageAction
	post /douyin/message/action (MessageActionRequest) returns (MessageActionResponse)
	@handler MessageChat
	get /douyin/message/chat (MessageChatRequest) returns (MessageChatResponse)
	
	@handler RelationAction
	post /douyin/relation/action (RelationActionRequest) returns (RelationActionResponse)
	@handler RelationFollowList
	get /douyin/relation/follow/list (RelationFollowListRequest) returns (RelationFollowListResponse)
	@handler RelationFollowerList
	get /douyin/relation/follower/list (RelationFollowerListRequest) returns (RelationFollowerListResponse)
	@handler RelationFriendList
	get /douyin/relation/friend/list (FriendListRequest) returns (FriendListResponse)
}

@server (
	middleware : AuthFeed
)
service apis {
	@handler VideoFeed
	get /douyin/feed (VideoFeedRequest) returns (VideoFeedResponse)
}

type (
	RelationActionRequest {
		ToUserId   int64 `form:"to_user_id" vd:"$>0;msg:'to_user_id error'"`
		ActionType int64 `form:"action_type" vd:"$==1||$==2;msg:'action_type error'"`
	}
	RelationActionResponse {
		BaseResponse
	}
)

type (
	RelationFollowListRequest {
		UserId int64 `form:"user_id" vd:"$>0;msg:'user_id error'"`
	}
	RelationFollowListResponse {
		BaseResponse
		UserList []*User `json:"user_list"`
	}
)

type (
	RelationFollowerListRequest {
		UserId int64 `form:"user_id" vd:"$>0;msg:'user_id error'"`
	}
	RelationFollowerListResponse {
		BaseResponse
		UserList []*User `json:"user_list"`
	}
)

type (
	FriendListRequest {
		UserId int64 `form:"user_id" vd:"$>0;msg:'user_id error'"`
	}
	FriendListResponse {
		BaseResponse
		FriendList []*FriendUser `json:"user_list"`
	}
)

type FriendUser {
	User
	MsgType int64  `json:"msg_type"  validate:"oneof=0 1"`
	Message string `json:"message,optional"`
}

type (
	FavoriteListRequest {
		UserId int64 `form:"user_id" vd:"$>0;msg:'user_id error'"`
	}
	FavoriteListResponse {
		BaseResponse
		VideoList []*Video `json:"video_list"`
	}
)

type (
	FavoriteActionRequest {
		VideoId    int64 `form:"video_id" vd:"$>0;msg:'video_id error'"`
		ActionType int64 `form:"action_type" vd:"$==1||$==2;msg:'action_type error'"`
	}
	FavoriteActionResponse {
		BaseResponse
	}
)

type (
	VideoFeedRequest {
		LatestTime int64  `form:"latest_time,optional"`
		Token      string `form:"token,optional"`
	}
	VideoFeedResponse {
		BaseResponse
		NextTime  int64    `json:"next_time"`
		VideoList []*Video `json:"video_list"`
	}
)

type (
	VideoListRequest {
		UserId int64 `form:"user_id,optional" vd:"$>0;msg:'user_id error'"`
	}
	VideoListResponse {
		BaseResponse
		VideoList []*Video `json:"video_list"`
	}
)

type Video {
	Id            int64  `json:"id"`
	Author        *User  `json:"author" copier:"User"`
	Title         string `json:"title"`
	PlayUrl       string `json:"play_url"`
	CoverUrl      string `json:"cover_url"`
	FavoriteCount int64  `json:"favorite_count"`
	CommentCount  int64  `json:"comment_count"`
	IsFavorite    bool   `json:"is_favorite"`
}

type Comment {
	Id         int64  `json:"id"`
	User       *User  `json:"user"`
	Content    string `json:"content"`
	CreateDate string `json:"create_date"`
}

type (
	CommentActionRequest {
		VideoId     int64  `form:"video_id" vd:"$>0;msg:'video_id error'"`
		ActionType  int64  `form:"action_type" vd:"$==1||$==2;msg:'action_type error'"`
		CommentText string `form:"comment_text,optional"`
		CommentId   int64  `form:"comment_id,optional"`
	}
	CommentActionResponse {
		BaseResponse
		Comment *Comment `json:"comment,omitempty"`
	}
)

type (
	CommentListRequest {
		VideoId int64 `form:"video_id" vd:"$>0;msg:'video_id error'"`
	}

	CommentListResponse {
		BaseResponse
		CommentList []*Comment `json:"comment_list"`
	}
)

type (
	VideoActionRequest {
		Title string `form:"title"`
	}
	VideoActionResponse {
		BaseResponse
	}
)

type (
	UserInfoRequest {
		UserId int64 `form:"user_id" vd:"$>0;msg:'user_id error'"`
	}
	UserInfoResponse {
		BaseResponse
		User *User `json:"user"`
	}
)

type User {
	Id              int64  `json:"id"`
	Username        string `json:"name"`
	Avatar          string `json:"avatar"`
	FollowCount     int64  `json:"follow_count"`
	TotalFavorited  int64  `json:"total_favorited"`
	Signature       string `json:"signature"`
	BackgroundImage string `json:"background_image"`
	FollowerCount   int64  `json:"follower_count"`
	WorkCount       int64  `json:"work_count"`
	FavoriteCount   int64  `json:"favorite_count"`
	IsFollow        bool   `json:"is_follow"`
}

type (
	UserLoginRequest {
		Username string `form:"username" vd:"len($)>0&&len($)<32;msg:'用户名长度错误'"`
		Password string `form:"password" vd:"len($)>0&&len($)<32;msg:'密码长度错误'"`
	}
	UserLoginResponse {
		BaseResponse
		UserId int64  `json:"user_id"`
		Token  string `json:"token"`
	}
)

type (
	UserRegisteRequest {
		Username string `form:"username" vd:"len($)>0&&len($)<32;msg:'用户名长度错误'"`
		Password string `form:"password" vd:"len($)>0&&len($)<32;msg:'密码长度错误'"`
	}
	UserRegisterResponse {
		BaseResponse
		UserId int64  `json:"user_id"`
		Token  string `json:"token"`
	}
)

type (
	MessageActionRequest {
		ToUserId   int64  `form:"to_user_id" vd:"$>0;msg:'to_user_id error'"`
		ActionType int64  `form:"action_type" vd:"$==1;msg:'action_type error'"`
		Content    string `form:"content" vd:"$!='';msg:'消息不能为空'"`
	}
	MessageActionResponse {
		BaseResponse
	}
)

type (
	MessageChatRequest {
		ToUserId   int64 `form:"to_user_id" vd:"$>0;msg:'to_user_id error'"`
		PreMsgTime int64 `form:"pre_msg_time,optional"`
	}
	MessageChatResponse {
		BaseResponse
		MessageList []*Message `json:"message_list"`
	}
)

type Message {
	Id         int64  `json:"id"`
	FromUserId int64  `json:"from_user_id"`
	ToUserId   int64  `json:"to_user_id"`
	Content    string `json:"content"`
	CreateTime int64  `json:"create_time"`
}

type BaseResponse {
	Code    int64  `json:"status_code"`
	Message string `json:"status_msg,omitempty"`
}